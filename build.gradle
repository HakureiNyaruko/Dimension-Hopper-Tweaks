//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

fancyGradle {
    patches {
        resources
        coremods
        codeChickenLib
        asm
        mergetool
    }
}


version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group
archivesBaseName = project.base_name

java.toolchain.getLanguageVersion().set(JavaLanguageVersion.of(8))

minecraft {
    mappings channel: 'stable', version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/dimhoppertweaks_at.cfg')
    runs {
        def args = [
                '-Dmixin.debug.export=true',
                '-Dmixin.hotSwap=true',
                '-Dmixin.checks.interfaces=true'
        ]
        client {
            workingDirectory file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }
    }
}

repositories {
    maven {
        name = 'BlameJared'
        url = uri('https://maven.blamejared.com')
    }
    maven {
        name = 'CurseForge'
        url = uri('https://www.cursemaven.com')
        content {
            includeGroup 'curse.maven'
        }
    }
    maven {
        name = 'Galacticraft'
        url = uri('https://maven.galacticraft.net/repository/legacy/')
    }
    maven {
        name = 'Modrinth'
        url = uri('https://api.modrinth.com/maven')
        content {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        name = 'Sponge'
        url = uri('https://repo.spongepowered.org/maven')
    }
    flatDir {
        dirs 'build/libs'
    }
}

dependencies {
    minecraft("net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}")
    annotationProcessor("org.spongepowered:mixin:${project.mixin_version}:processor")

    //implemented cf stuff
    implementation(fg.deobf("curse.maven:actually-additions-228404:${project.aa_version}"))
    implementation(fg.deobf("curse.maven:ae2-extended-life-570458:${project.ae2_verion}"))
    implementation(fg.deobf("curse.maven:aether-ii-223796:${project.aether_version}"))
    implementation(fg.deobf("curse.maven:aoa-311054:${project.aoa_version}"))
    implementation(fg.deobf("curse.maven:aquaculture-60028:${project.aquaculture_version}"))
    implementation(fg.deobf("curse.maven:avaritia-261348:${project.avaritia_version}"))
    implementation(fg.deobf("curse.maven:botania-225643:${project.botania_version}"))
    implementation(fg.deobf("curse.maven:cavern-ii-285628:${project.cavern_version}"))
    implementation(fg.deobf("curse.maven:codechicken-lib-242818:${project.ccl_version}"))
    implementation(fg.deobf("curse.maven:dimensionaldoors-284876:${project.dimdoors_version}"))
    implementation(fg.deobf("curse.maven:extraplanets-241291:${project.extraplanets_version}"))
    implementation(fg.deobf("curse.maven:game-stages-268655:${project.gamestages_version}"))
    implementation(fg.deobf("curse.maven:geckolib-388172:${project.gecko_version}"))
    implementation(fg.deobf("curse.maven:lightningcraft-237422:${project.lightningcraft_version}"))
    implementation(fg.deobf("curse.maven:lockyz-extra-dimensions-mod-283789:${project.lockyz_version}"))
    implementation(fg.deobf("curse.maven:mixin-booter-419286:${project.mixinbooter_version}"))
    implementation(fg.deobf("curse.maven:openblocks-228816:${project.openblocks_version}"))
    implementation(fg.deobf("curse.maven:ore-stages-290201:${project.orestages_version}"))
    implementation(fg.deobf("curse.maven:overloaded-264601:${project.overloaded_version}"))
    implementation(fg.deobf("curse.maven:psi-241665:${project.psi_version}"))
    implementation(fg.deobf("curse.maven:random-things-59816:${project.randomthings_version}"))
    implementation(fg.deobf("curse.maven:recipe-stages-280554:${project.recipestages_version}"))
    implementation(fg.deobf("curse.maven:reskillable-286382:${project.reskillable_version}"))
    implementation(fg.deobf("curse.maven:scaling-health-248027:${project.scalinghealth_version}"))
    implementation(fg.deobf("curse.maven:sgcraft-289115:${project.sgcraft_version}"))
    implementation(fg.deobf("curse.maven:silent-lib-242998:${project.slib_version}"))
    implementation(fg.deobf("curse.maven:tesla-244651:${project.tesla_version}"))
    implementation(fg.deobf("curse.maven:the-impossible-library-661115:${project.til_version}"))
    implementation(fg.deobf("curse.maven:the-one-probe-245211:${project.top_version}"))
    implementation(fg.deobf("curse.maven:the-twilight-forest-227639:${project.tf_version}"))
    implementation(fg.deobf("curse.maven:thermal-cultivation-271835:${project.thermalcultivation_version}"))
    implementation(fg.deobf("curse.maven:thermal-expansion-69163:${project.thermalexpansion_version}"))
    implementation(fg.deobf("curse.maven:tinkers-construct-74072:${project.tconstruct_version}"))
    implementation(fg.deobf("curse.maven:tiny-progressions-250850:${project.tp_version}"))
    implementation(fg.deobf("curse.maven:xl-food-mod-247217:${project.xlfood_version}"))
    implementation(fg.deobf("curse.maven:zollern-galaxy-241940:${project.zollern_version}"))

    //implemented other stuff
    implementation(fg.deobf("CraftTweaker2:CraftTweaker2-MC1120-Main:${project.ct_version}"))
    implementation(fg.deobf("CraftTweaker2:CraftTweaker2-API:${project.ct_version}"))
    implementation(fg.deobf("CraftTweaker2:ZenScript:${project.ct_version}"))
    implementation(fg.deobf("maven.modrinth:misty-world:${project.misty_version}"))
    implementation(fg.deobf("maven.modrinth:the-midnight:${project.midnight_version}"))

    //runtime stuff and libraries
    runtimeOnly(fg.deobf("com.gildedgames.orbis:orbis-lib:${project.orbis_version}"))
    runtimeOnly(fg.deobf("curse.maven:autoreglib-250363:${project.autoreglib_version}"))
    runtimeOnly(fg.deobf("curse.maven:baubles-227083:${project.baubles_version}"))
    runtimeOnly(fg.deobf("curse.maven:bookshelf-228525:${project.bookshelf_version}"))
    runtimeOnly(fg.deobf("curse.maven:cofh-core-69162:${project.cofhcore_version}"))
    runtimeOnly(fg.deobf("curse.maven:cofh-world-271384:${project.cofhworld_version}"))
    runtimeOnly(fg.deobf("curse.maven:good-nights-sleep-61461:${project.gn_version}"))
    runtimeOnly(fg.deobf("curse.maven:had-enough-items-557549:${project.hei_version}"))
    runtimeOnly(fg.deobf("curse.maven:mantle-74924:${project.mantle_version}"))
    runtimeOnly(fg.deobf("curse.maven:mjrlegendslib-284331:${project.mjrlib_version}"))
    runtimeOnly(fg.deobf("curse.maven:redstone-flux-270789:${project.rf_version}"))
    runtimeOnly(fg.deobf("curse.maven:thermal-foundation-222880:${project.thermalfoundation_version}"))
    runtimeOnly(fg.deobf("dev.galacticraft:galacticraft-legacy:${project.galacticraft_version}"))
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "dimhoppertweaks.refmap.json"
}

jar {
    manifest {
        attributes([
                'FMLCorePlugin': 'mods.thecomputerizer.dimhoppertweaks.core.EarlyMixinPlugin',
                'FMLCorePluginContainsFMLMod': true,
                'ForceLoadAsMod': true,
                'FMLAT': 'dimhoppertweaks_at.cfg',
        ])
    }
}